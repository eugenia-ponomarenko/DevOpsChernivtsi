---
- hosts: all

  become: yes
  become_method: sudo
  remote_user: ubuntu
  vars:
    tomcat_ver: 9.0.60                         
    ui_manager_user: login                    
    ui_manager_pass: passwd               
    ui_admin_username: login              
    ui_admin_pass: passwd         

  tasks:
  - name: Update and upgrade apt packages
    apt:
      upgrade: yes
      update_cache: yes
      cache_valid_time: 86400 #One day

  - name: Install Java 8, Maven
    become: yes
    apt:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
          - openjdk-8-jdk
          - maven

  - name: Ensure the system can use the HTTPS transport for APT.
    stat:
      path: /usr/lib/apt/methods/https
    register: apt_https_transport

  - name: Install APT HTTPS transport.
    apt:
      name: "apt-transport-https"
      state: present
      update_cache: yes
    when: not apt_https_transport.stat.exists

  - name: Install basic packages
    package:
      name: ['vim','aptitude','bash-completion','tmux','tree','htop','wget','unzip','curl','git']
      state: present
      update_cache: yes

#------------- Tomcat install ---------------

  - name: Add tomcat group
    group:
      name: tomcat

  - name: Add "tomcat" user
    user:
      name: tomcat
      group: tomcat
      home: /usr/share/tomcat
      createhome: no
      system: yes

  - name: Download Tomcat
    get_url:
      url: https://archive.apache.org/dist/tomcat/tomcat-9/v{{ tomcat_ver }}/bin/apache-tomcat-{{ tomcat_ver }}.tar.gz
      dest: /tmp/apache-tomcat-{{ tomcat_ver }}.tar.gz

  - name: Create a tomcat directory
    file:
      path: /usr/share/tomcat
      state: directory
      owner: tomcat
      group: tomcat

  - name: Extract tomcat archive
    unarchive:
      src: /tmp/apache-tomcat-{{ tomcat_ver }}.tar.gz
      dest: /usr/share/tomcat
      owner: tomcat
      group: tomcat
      remote_src: yes
      extra_opts: "--strip-components=1"
      creates: /usr/share/tomcat/bin

  - name: Copy tomcat service file
    template:
      src: tomcatFiles/tomcat.service
      dest: /etc/systemd/system/tomcat.service
    when: ansible_service_mgr == "systemd"

  - name: Start and enable tomcat
    service:
      daemon_reload: yes
      name: tomcat
      state: started
      enabled: yes
    when: ansible_service_mgr == "systemd"

  - name: Set UI access credentials
    template:
      src: tomcatFiles/tomcat-users.xml
      dest: /usr/share/tomcat/conf/tomcat-users.xml
    notify: restart tomcat

  - name: restart tomcat
    service:
      name: tomcat
      state: restarted

  - name: Allow access to Manager and Host Manager apps from any IP
    template:
      src: tomcatFiles/context.xml
      dest: "{{ item }}"
    with_items:
      - /usr/share/tomcat/webapps/host-manager/META-INF/context.xml
      - /usr/share/tomcat/webapps/manager/META-INF/context.xml
    notify: restart tomcat


# #------------- Build and deploy ----------------------

  - name: Copy files from local to remote
    copy:
      src: "{{ item }}"
      dest: ~/
      mode: 0777
    with_items:
      - "~/DevOpsChernivtsi/GeoCitizen/AWS.Terraform+Ansible/emailCredentials"
      - "~/DevOpsChernivtsi/GeoCitizen/AWS.Terraform+Ansible/Terraform/details/credentials"

  - name: Execute cleanDeploy.sh
    script: ~/DevOpsChernivtsi/GeoCitizen/AWS.Terraform+Ansible/cleanD.sh
